@page "/s"

<PageTitle>Мониторинг</PageTitle>

@using Microsoft.EntityFrameworkCore;
@using Stationar.Domen.Models;
@inject StationarContext db


@using Plk.Blazor.DragDrop

<h3>Мониторинг состояния стационара по коечному фонду</h3>


@if(rooms == null)
{
    <h3> Загрузка комнатs...</h3>
}
else


    @foreach(var r in rooms)
    {
        <div class="room container border border-3 border-primary"  >

        

                Номер палаты: @r.Number

                @foreach (var p in r.Places)
                {

                <div class="container border border-2 border-warning" draggable="true" @ondragstart="(e) => HandleDragStart(e,p)"
                                                                                       @ondrop="(e) => HandleDrop(e,p)"
                                                                                       ondragover="event.preventDefault();">
                    @if(p.Patient != null)
                    {
                        <div> Место: @p.Id</div>
                        <h3> Пациент: @p.Patient.Name</h3>
                    }
                    else
                    {
                        <h3>Место свободно </h3>
                    }

                </div>

                }

        </div>
    }



@code {
    Place currentTargetPlace;

    IEnumerable<Room> rooms = new List<Room>();
    string t;

    protected override async Task OnInitializedAsync()
    {

        rooms = await db.Rooms.Include(r => r.Places).ThenInclude(p => p.Patient).ToListAsync();

    }


    private async Task HandleDragStart(DragEventArgs e,Place p)
    {
        Console.Out.WriteLine($"Передан объект: {p.Patient.Name}");
    }


    private void HandleDrop(DragEventArgs e,Place p)
    {
        currentTargetPlace = p;
        Console.WriteLine($"Целевой объект: {currentTargetPlace.Patient.Name}");
    }

    // private void HandleDragLeave()
    // {
    //     currentTargetPlace = null;
    // }

}
